import{_ as n,c as s,a6 as e,o as p}from"./chunks/framework.C_m7SF9B.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"workflow/npm发布.md","filePath":"workflow/npm发布.md","lastUpdated":1679303921000}'),i={name:"workflow/npm发布.md"};function l(t,a,r,o,c,u){return p(),s("div",null,a[0]||(a[0]=[e(`<h2 id="新建项目" tabindex="-1">新建项目 <a class="header-anchor" href="#新建项目" aria-label="Permalink to &quot;新建项目&quot;">​</a></h2><h3 id="建立目录" tabindex="-1">建立目录 <a class="header-anchor" href="#建立目录" aria-label="Permalink to &quot;建立目录&quot;">​</a></h3><h3 id="初始化-git" tabindex="-1">初始化 git <a class="header-anchor" href="#初始化-git" aria-label="Permalink to &quot;初始化 git&quot;">​</a></h3><p>在 npm 项目根目录运行终端命令：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git init .</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="编写-package-json" tabindex="-1">编写 package.json <a class="header-anchor" href="#编写-package-json" aria-label="Permalink to &quot;编写 package.json&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm init --yes</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>package.json 重点字段说明：</strong> name 即 npm 项目包名，发布到 npm 时就是取的这个 name 名，你自己取个语义化的名字，和已有的 npm 库不能重复； version 版本号，更新 npm 包时必须修改一个更高的版本号后才能成功发布到 npm，版本号最好遵循 npm 版本管理规范； description 包的描述，发布到 npm 后你搜索该 npm 包时，在搜索联想列表里会显示在包名的下方，作为描述说明； main 入口文件路径，在你通过 import 或 require 引用该 npm 包时就是引入的该路径的文件；</p><h3 id="添加-license" tabindex="-1">添加 LICENSE <a class="header-anchor" href="#添加-license" aria-label="Permalink to &quot;添加 LICENSE&quot;">​</a></h3><p>LICENSE 即开源协议文件，这里使用 MIT 协议类型。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>MIT License</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Copyright (c) 2020 zhangfuling</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Permission is hereby granted, free of charge, to any person obtaining a copy</span></span>
<span class="line"><span>of this software and associated documentation files (the &quot;Software&quot;), to deal</span></span>
<span class="line"><span>in the Software without restriction, including without limitation the rights</span></span>
<span class="line"><span>to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span></span>
<span class="line"><span>copies of the Software, and to permit persons to whom the Software is</span></span>
<span class="line"><span>furnished to do so, subject to the following conditions:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>The above copyright notice and this permission notice shall be included in all</span></span>
<span class="line"><span>copies or substantial portions of the Software.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></span>
<span class="line"><span>IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></span>
<span class="line"><span>FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></span>
<span class="line"><span>AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></span>
<span class="line"><span>LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></span>
<span class="line"><span>OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></span>
<span class="line"><span>SOFTWARE.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><ul><li>Copyright © 2020 zhangfuling 这一行，2020 是年份，自行修改为当前年份，zhangfuling 是作者姓名，改成你自己的。</li><li>package.json 里修改 license 字段值为 MIT</li></ul><h3 id="配置-npm-上传白名单" tabindex="-1">配置 npm 上传白名单 <a class="header-anchor" href="#配置-npm-上传白名单" aria-label="Permalink to &quot;配置 npm 上传白名单&quot;">​</a></h3><p>配置 npm 上传的文件白名单，可以指定哪些文件上传哪些不上传， 比如我这里不想直接发布 src 里的 index.js 源码，而是发布 dist 目录下的 index.min.js（index.js 压缩后的文件），按以下配置： 在 package.json 里，修改 main 字段的路径指向 dist/index.min.js：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;main&quot;: &quot;dist/index.min.js&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>添加 files 字段来配置要上传 npm 的文件白名单目录：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;files&quot;: [</span></span>
<span class="line"><span>  &quot;dist&quot;</span></span>
<span class="line"><span>]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这样 dist 文件夹会上传 npm，而 src 文件夹就不会上传，想保存 src 源码就上传项目到 git 远程仓库就行，这样 git 仓库保存了完整项目，而 npm 只包含部分项目文件。 有些文件是必定会上传的，无法控制，例如 package.json、LICENSE、README.md 等等。 当然了，也可以配置 npm 上传黑名单，通过.npmignore 配置，具体不再赘述。</p><h3 id="关联-github-地址" tabindex="-1">关联 github 地址 <a class="header-anchor" href="#关联-github-地址" aria-label="Permalink to &quot;关联 github 地址&quot;">​</a></h3><p>如果想把 npm 包和项目 github 地址关联起来，首先项目需要先上传到 github 上，然后 package.json 添加 repository 字段</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;repository&quot;: {</span></span>
<span class="line"><span>  &quot;type&quot;: &quot;git&quot;,</span></span>
<span class="line"><span>  &quot;url&quot;: &quot;git://github.com/neohan666/wxmp-rsa.git&quot;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>url 后的地址格式，就是项目 git 上的 https 完整地址把 https 换成 git</li><li>关联并发布 npm 后，在 npm 官网的该 npm 包页面右边会显示有 github 链接，点击可以跳转到 github 项目地址。</li></ul><h3 id="完整-package-json-内容和项目目录" tabindex="-1">完整 package.json 内容和项目目录 <a class="header-anchor" href="#完整-package-json-内容和项目目录" aria-label="Permalink to &quot;完整 package.json 内容和项目目录&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;name&quot;: &quot;wxmp-rsa&quot;,</span></span>
<span class="line"><span>  &quot;version&quot;: &quot;1.0.0&quot;,</span></span>
<span class="line"><span>  &quot;description&quot;: &quot;兼容微信小程序的rsa加解密库，支持超长文本和中文字符&quot;,</span></span>
<span class="line"><span>  &quot;author&quot;: &quot;neohan&quot;,</span></span>
<span class="line"><span>  &quot;main&quot;: &quot;dist/index.js&quot;,</span></span>
<span class="line"><span>  &quot;scripts&quot;: {</span></span>
<span class="line"><span>    &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  &quot;keywords&quot;: [&quot;wxmp&quot;, &quot;rsa&quot;, &quot;jsencrypt&quot;, &quot;js&quot;, &quot;long&quot;],</span></span>
<span class="line"><span>  &quot;license&quot;: &quot;MIT&quot;,</span></span>
<span class="line"><span>  &quot;files&quot;: [</span></span>
<span class="line"><span>    &quot;dist&quot;</span></span>
<span class="line"><span>  ],</span></span>
<span class="line"><span>  &quot;repository&quot;: {</span></span>
<span class="line"><span>    &quot;type&quot;: &quot;git&quot;,</span></span>
<span class="line"><span>    &quot;url&quot;: &quot;git://github.com/xxx/xxxx.git&quot;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><img src="https://cdn.nlark.com/yuque/0/2022/png/292785/1654762576220-ebfb1f80-d712-40a0-b72d-bfd8ba615d11.png#clientId=ue306e734-9531-4&amp;from=paste&amp;height=199&amp;id=u6053376a&amp;name=image.png&amp;originHeight=199&amp;originWidth=191&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=10479&amp;status=done&amp;style=none&amp;taskId=ub635b870-6084-429d-a098-02326c571b2&amp;title=&amp;width=191" alt="image.png"></p><h2 id="发布-npm" tabindex="-1">发布 npm <a class="header-anchor" href="#发布-npm" aria-label="Permalink to &quot;发布 npm&quot;">​</a></h2><h3 id="npm-注册登录" tabindex="-1">npm 注册登录 <a class="header-anchor" href="#npm-注册登录" aria-label="Permalink to &quot;npm 注册登录&quot;">​</a></h3><ul><li>先去 npm 官网注册账号：<a href="https://www.npmjs.com/%EF%BC%8C%E6%88%96%E8%80%85%E9%80%9A%E8%BF%87%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%86%8C%EF%BC%9A" target="_blank" rel="noreferrer">https://www.npmjs.com/，或者通过终端命令注册：</a> npm adduser</li><li>终端命令，登录 npm 账号 npm login</li></ul><h3 id="调试-npm" tabindex="-1">调试 npm <a class="header-anchor" href="#调试-npm" aria-label="Permalink to &quot;调试 npm&quot;">​</a></h3><p>如果不需要调试，可以跳过调试步骤，直接发布。 npm 项目根目录运行终端命令：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm link</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>运行后即将该 npm 包放进了本地 npm 缓存里， 如果要在其他项目（例如项目名叫 aaa）里引用调试，只需要在在 aaa 里运行命令：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm link 包名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样就在 aaa 里建立了包名到 npm 包的链接关联，通过常规方式引入就可以测试 npm 包了。 如果要取消项目 aaa 与 npm 包的关联，在 aaa 项目下运行命令：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm unlink 包名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>为了防止本地调试 npm 与发布后的 npm 混淆冲突，在调试完成后一定记得手动取消项目关联。</p><h3 id="发布" tabindex="-1">发布 <a class="header-anchor" href="#发布" aria-label="Permalink to &quot;发布&quot;">​</a></h3><p>在 npm 包项目根目录运行命令：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm publish</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>运行完后，稍等片刻，在 npm 官网就可以搜索到发布的该 npm 包了。</p><ul><li>因为很多人把 npm 源都切到了淘宝源，毕竟速度快，但是发布 npm 前需要先恢复到 npm 官方源上，否则发布失败，切换命令：</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 配置npm全局使用淘宝镜像源</span></span>
<span class="line"><span>npm config set registry https://registry.npm.taobao.org</span></span>
<span class="line"><span>// 配置npm全局恢复官方镜像源</span></span>
<span class="line"><span>npm config set registry https://registry.npmjs.org</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>或者呢，在项目根目录新建.npmrc 文件，写入以下内容即可：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>registry=https://registry.npmjs.org</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样，在此项目下运行 npm 命令时，默认使用的仓库都是配置官方源，不影响其他项目。 如果要发布一个 beta 包，运行命令：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm publish --tag beta</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>其实就是发布了一个标签，标签名可以自定义，例如 alpha next。</li></ul><h3 id="成员权限" tabindex="-1">成员权限 <a class="header-anchor" href="#成员权限" aria-label="Permalink to &quot;成员权限&quot;">​</a></h3><p>发布 npm 是用自己的账号发布的，默认只有自己能更新包，如果想要给其他人更新 npm 包的权限，按以下方式： 打开 npm 包所在页面，点击右方 settings 栏，然后在 Invite maintainer 模块，输入要加入权限的 npm 账号的 username，然后点击 invite 就加入，下方 Maintainers 就是有权限的 npm 项目成员列表。</p><h3 id="作废和删除" tabindex="-1">作废和删除 <a class="header-anchor" href="#作废和删除" aria-label="Permalink to &quot;作废和删除&quot;">​</a></h3><p>（1）作废 npm 包，就是这里的 Deprecate package，就是给 npm 包打上已作废的标签，表示不再更新维护。</p><p>在 npm 包页面展示（示例：@babel/polyfill）以及 npm i 下载时会有提示。</p><p>也可以通过命令行操作：<code>npm deprecate &lt;package-name&gt; &quot;&lt;message&gt;&quot;</code> （2）<strong>删除已发布的包</strong>，这是非常危险的行为，除非你确定这个包没有其他人使用。 npm 官网的删除政策这几年一直在变，我记得之前是不允许删除，现在又可以了，但有一些限制，需满足以下几点才能删除：</p><ul><li>没有其他 npm 包依赖此包</li><li>上一周的 npm 下载量不超过 300</li><li>npm 包成员只存在一个拥有者或管理员 具体可以查看 npm 官网政策</li></ul><h2 id="注意点" tabindex="-1">注意点 <a class="header-anchor" href="#注意点" aria-label="Permalink to &quot;注意点&quot;">​</a></h2><ul><li>发布到 npm 上就意味着代码的开源，如果是有公司业务相关的代码就不建议发到 npm 上，最好是公司自建一个私有仓库来使用。</li><li>npm 淘宝源是每隔十分钟和 npm 官方源同步一次，所以刚发布 npm 后可能要等几分钟后淘宝源才会更新，如果发布后就立马切换回淘宝源再更新包可能更的还是老版本。</li></ul>`,56)]))}const b=n(i,[["render",l]]);export{m as __pageData,b as default};
